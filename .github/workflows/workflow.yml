name: Main workflow

on:
  - push
  - pull_request

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-version:
          - 4.06.1
        node-version:
          - 14.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Try to restore yarn cache
        uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Try to restore .opam folder
        id: cache-opam
        uses: actions/cache@v1
        with:
          path: ~/.opam
          # opam cache is coupled to esy lock files, both caches will be wiped whenever esy deps change
          key:
            ${{ runner.os }}-opam-${{ matrix.ocaml-version }}-${{
            hashFiles('**/index.json') }}

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Install latest esy
        run: npm install --global esy

      - name: Try to restore esy install cache
        uses: actions/cache@v1
        with:
          path: ~/.esy/source
          key: source-${{ hashFiles('**/index.json') }}

      - name: Install opam packages
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: |
          opam pin ocaml-lsp-server https://github.com/ocaml/ocaml-lsp.git --no-action
          opam install ocaml-lsp-server ocamlformat reason --yes

      - name: Install esy packages
        run: esy install

      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print_esy_cache.js

      - name: Try to restore build cache
        id: deps-cache-macos
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: build-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          restore-keys: build-${{ matrix.os }}-

      - name: Build
        run: |
          esy build
          # Cleanup build cache in case dependencies have changed
          esy cleanup .

      - name: Install npm packages
        run: yarn --frozen-lockfile

      - name: Check formatting
        run: yarn fmt:check

      - name: Test extension
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: yarn test

      - name: Package extension
        run: yarn package

      - name: Publish
        if: |
          success() &&
          runner.os == 'Linux' &&
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags/')
        run: yarn publish --pat ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}

      - name: Upload extension installer to artifact
        uses: actions/upload-artifact@v2
        with:
          name: ocaml-platform-${{ matrix.os }}-${{ github.sha }}
          path: ocaml-platform-*.vsix
